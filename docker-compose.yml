version: "3"
services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  kafka:
    hostname: kafka
    image: wurstmeister/kafka
    ports:
      - "9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "${RAW_DATA_TOPIC_NAME}:1:1,${PARSED_DATA_TOPIC_NAME}:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  endpoint:
    build:
      context: ./endpoint
    ports:
      - "8000:5000"
    restart: always
    depends_on:
      - kafka
      - zookeeper
    volumes:
      - ./endpoint:/app
    env_file:
      - ./.env
  parser:
    build:
      context: ./parser
    restart: always
    depends_on:
      - kafka
      - zookeeper
      - endpoint
    volumes:
      - ./parser:/app
    env_file:
      - ./.env
  api:
    build:
      context: ./persister
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./persister/:/app/
    ports:
      - "8001:8000"
    env_file:
      - ./.env
  persister:
    build:
      context: ./persister
    command: python manage.py consume
    volumes:
      - ./persister/:/app/
      - kafka
      - zookeeper
    env_file:
      - ./.env
  # db:
  #   image: postgres
  #   environment:
  #     - POSTGRES_DB=postgres
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=postgres
  chart:
    build:
      context: ./chart
    ports:
      - 8002:80
